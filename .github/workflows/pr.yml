name: PR Processing

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:

  process-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve the version
        id: version
        run: |
          echo "Workspace path: $GITHUB_WORKSPACE/../"
          ls $GITHUB_WORKSPACE
          if [[ -f $GITHUB_WORKSPACE/version.txt ]]; then
             version=$(cat  $GITHUB_WORKSPACE/version.txt)
             echo "version=${version}" >> $GITHUB_ENV
          else
            echo "version.txt file not found in the repository."
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}

      - name: Assign version as a label
        run: |
          version="${{ env.version }}"

          pr_number=$(echo "${{ github.event.pull_request.url }}" | awk -F/ '{print $NF}')
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          
          label_response=$(gh api -X GET /repos/${{ github.repository }}/labels/"$version") 
          exists=$(echo "$label_response" | jq -e . >/dev/null; echo $?)

          if [[ $exists -ne 0 ]]; then
            gh api -X POST /repos/${{ github.repository }}/labels -f name="$version" -f color="ff0000"
          else

            echo "label=${version}" >> $GITHUB_ENV
            
          
          gh pr edit $pr_number --add-label "$version"
          

        env:
          GITHUB_TOKEN: ${{ secrets.Token }}

      - name: Retrieve PR details
        id: pr
        run: |
          pr_number="{{env.PR_NUMBER}}"
          task_id=$(gh pr view $pr_number --json body -q '.body' | grep -oP '#\d+' | grep -oP '\d+')        
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Retrieve milestone information
        id: milestone
        run: |
          task_id="${{ needs.pr.outputs.task_id }}"
          milestone=$(gh api repos/${{ github.repository }}/issues/$task_id | jq -r '.milestone')
          echo "::set-output name=milestone::$milestone"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Associate PR with task and milestone
        run: |
          task_id="${{ needs.pr.outputs.task_id }}"
          milestone_number=$(echo "${{ needs.milestone.outputs.milestone }}" | jq -r '.number')
          gh api repos/${{ github.repository }}/issues/$task_id --method PATCH --field milestone="$milestone_number" --field labels+="PR Linked"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Use Milestone
        run: |
          milestone_title=$(echo "${{ needs.milestone.outputs.milestone }}" | jq -r '.title')
          echo "Milestone: $milestone_title"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}

