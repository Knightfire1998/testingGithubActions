name: PR Processing

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:

  process-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve the version
        id: version
        run: |
          echo "Workspace path: $GITHUB_WORKSPACE/../"
          ls $GITHUB_WORKSPACE
          if [[ -f $GITHUB_WORKSPACE/version.txt ]]; then
             version=$(cat  $GITHUB_WORKSPACE/version.txt)
             echo "version=${version}" >> $GITHUB_ENV
          else
            echo "version.txt file not found in the repository."
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}
      - name: Assign version as a label
        run: |
          version="${{ env.version }}"
          pr_number=$(echo "${{ github.event.pull_request.url }}" | awk -F/ '{print $NF}')
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
         
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}

      - name: Get Project Custom Field
        id: get_custom_field
        run: |
          project_id="1"  # Replace with your project ID
          custom_field_name="versions"  # Replace with the name of your custom field
          echo "PR number: $custom_field_name"
          custom_field_value=$(curl -s -H "Authorization: Bearer ${{ secrets.Token }}" \
              "https://api.github.com/projects/$project_id" | \
              jq -r ".custom_field_values[] | select(.name == \"$custom_field_name\") | .value")

          echo "CUSTOM_FIELD_VALUE=$custom_field_value" >> $GITHUB_ENV

      - name: Use PR number and add label
        run: |
          pr_number=$PR_NUMBER
          custom_field_value=$CUSTOM_FIELD_VALUE
          echo "PR number: $pr_number"
          echo "Custom field value: $custom_field_value"

          # Assign the label based on the custom field value
          if [[ "$custom_field_value" == "Option 1" ]]; then
            label="label1"
          elif [[ "$custom_field_value" == "Option 2" ]]; then
            label="label2"
          else
            label="default-label"
          fi

          gh pr edit $pr_number --add-label "$label"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Retrieve PR details
        id: pr
        run: |
          pr_number=$(echo "${{ github.event.pull_request.url }}" | awk -F/ '{print $NF}')
          echo "::set-output name=task_id::$(gh pr view $pr_number --json body -q '.body' | grep -oP '#\d+' | grep -oP '\d+')"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Retrieve milestone information
        id: milestone
        run: |
          task_id="${{ needs.pr.outputs.task_id }}"
          milestone=$(gh api repos/${{ github.repository }}/issues/$task_id | jq -r '.milestone')
          echo "::set-output name=milestone::$milestone"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Associate PR with task and milestone
        run: |
          task_id="${{ needs.pr.outputs.task_id }}"
          milestone_number=$(echo "${{ needs.milestone.outputs.milestone }}" | jq -r '.number')
          gh api repos/${{ github.repository }}/issues/$task_id --method PATCH --field milestone="$milestone_number" --field labels+="PR Linked"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}


      - name: Use Milestone
        run: |
          milestone_title=$(echo "${{ needs.milestone.outputs.milestone }}" | jq -r '.title')
          echo "Milestone: $milestone_title"
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}

